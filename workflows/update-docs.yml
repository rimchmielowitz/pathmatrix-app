name: 📚 Update Documentation

on:
  push:
    branches: [ main ]
    paths: 
      - 'app.py'                    # Only trigger when main code changes
      - 'scripts/generate_function_docs.py'  # Or when generator changes
  workflow_dispatch:               # Allow manual triggering

jobs:
  update-docs:
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0            # Fetch full history for version tags
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: 🐍 Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: 📦 Install Dependencies
      run: |
        python -m pip install --upgrade pip
        # Install only dependencies needed for doc generation
        pip install ast-tools typing-extensions
        # If your app.py imports other packages, install them too:
        # pip install streamlit pandas folium requests geopy
        
    - name: 🔍 Check for Changes
      id: check_changes
      run: |
        # Check if app.py actually changed (not just touched)
        if git diff --name-only HEAD~1 HEAD | grep -q "app.py"; then
          echo "app_changed=true" >> $GITHUB_OUTPUT
          echo "📝 app.py has changes, will update docs"
        else
          echo "app_changed=false" >> $GITHUB_OUTPUT
          echo "ℹ️ No changes to app.py detected"
        fi
    
    - name: 📚 Generate Function Documentation
      if: steps.check_changes.outputs.app_changed == 'true'
      run: |
        echo "🔄 Generating function documentation..."
        python scripts/generate_function_docs.py
        
        # Check if docs actually changed
        if git diff --quiet docs/FUNCTION_REFERENCE.md; then
          echo "📋 No changes to function documentation"
          echo "docs_changed=false" >> $GITHUB_ENV
        else
          echo "📋 Function documentation updated"
          echo "docs_changed=true" >> $GITHUB_ENV
        fi
    
    - name: 🏷️ Get Version Info
      if: env.docs_changed == 'true'
      id: version
      run: |
        # Get current version
        if git describe --tags --exact-match HEAD 2>/dev/null; then
          VERSION=$(git describe --tags --exact-match HEAD)
          echo "Version from tag: $VERSION"
        else
          VERSION=$(git describe --tags --always)
          echo "Version from commit: $VERSION"
        fi
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        
        # Count functions for commit message
        FUNCTION_COUNT=$(grep -c "#### \`" docs/FUNCTION_REFERENCE.md || echo "0")
        echo "function_count=$FUNCTION_COUNT" >> $GITHUB_OUTPUT
    
    - name: ✍️ Commit Documentation Changes
      if: env.docs_changed == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # Add the updated documentation
        git add docs/FUNCTION_REFERENCE.md
        
        # Create informative commit message
        git commit -m "📚 Auto-update function documentation
        
        - Updated FUNCTION_REFERENCE.md from app.py
        - Version: ${{ steps.version.outputs.version }}
        - Functions documented: ${{ steps.version.outputs.function_count }}
        - Auto-generated by GitHub Action"
    
    - name: 🚀 Push Documentation Changes
      if: env.docs_changed == 'true'
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: main
    
    - name: 📊 Report Results
      if: always()
      run: |
        echo "## 📚 Documentation Update Results" >> $GITHUB_STEP_SUMMARY
        
        if [ "${{ steps.check_changes.outputs.app_changed }}" == "true" ]; then
          echo "✅ **app.py changed:** Documentation generation triggered" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ env.docs_changed }}" == "true" ]; then
            echo "✅ **Documentation updated:** FUNCTION_REFERENCE.md has been updated" >> $GITHUB_STEP_SUMMARY
            echo "📊 **Functions documented:** ${{ steps.version.outputs.function_count }}" >> $GITHUB_STEP_SUMMARY
            echo "🔖 **Version:** ${{ steps.version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          else
            echo "ℹ️ **No documentation changes:** Function signatures unchanged" >> $GITHUB_STEP_SUMMARY
          fi
        else
          echo "ℹ️ **No changes:** app.py was not modified" >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "🔗 **View updated documentation:** [FUNCTION_REFERENCE.md](docs/FUNCTION_REFERENCE.md)" >> $GITHUB_STEP_SUMMARY

  # Optional: Create PR for documentation updates (if you prefer review process)
  create-docs-pr:
    runs-on: ubuntu-latest
    if: false  # Set to true if you want PR-based updates instead of direct commits
    
    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4
    
    - name: 🐍 Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: 📚 Generate Documentation
      run: |
        python scripts/generate_function_docs.py
    
    - name: 📝 Create Pull Request
      if: ${{ github.event_name == 'push' }}
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: "📚 Auto-update function documentation"
        title: "📚 Update function documentation"
        body: |
          ## 📚 Automated Documentation Update
          
          This PR contains automatically generated updates to the function documentation.
          
          ### Changes:
          - ✅ Updated `docs/FUNCTION_REFERENCE.md` from source code
          - 🔄 Extracted latest docstrings and function signatures
          - 🏷️ Added version information
          
          ### Generated from:
          - **Source:** `app.py`
          - **Generator:** `scripts/generate_function_docs.py`
          - **Triggered by:** Commit ${{ github.sha }}
          
          Please review and merge if the changes look correct.
        branch: docs/auto-update-function-reference
        delete-branch: true